from typing import List

class Клиент:
    """Класс, описывающий клиента"""
    def __init__(self, имя: str, email: str):
        self.имя = имя
        self.email = email
    
    def __str__(self):
        return f"Клиент: {self.имя}, Email: {self.email}"

class Сотрудник:
    """Базовый класс сотрудника"""
    def __init__(self, имя: str, должность: str, зарплата: float):
        self.__имя = имя  # Инкапсуляция: скрываем имя
        self.должность = должность
        self.__зарплата = зарплата  # Инкапсуляция: скрываем зарплату

    def работать(self):
        return f"{self.__имя} выполняет обязанности."

    def получить_информацию(self):
        return f"Сотрудник: {self.__имя}, Должность: {self.должность}"

class Менеджер(Сотрудник):
    """Класс Менеджера, наследуется от Сотрудник"""
    def __init__(self, имя: str, зарплата: float, отдел: str):
        super().__init__(имя, "Менеджер", зарплата)
        self.отдел = отдел

    def работать(self):
        return f"Менеджер отдела {self.отдел} управляет продажами."

class Продавец(Сотрудник):
    """Класс Продавца, наследуется от Сотрудник"""
    def __init__(self, имя: str, зарплата: float, клиенты: List[Клиент]):
        super().__init__(имя, "Продавец", зарплата)
        self.клиенты = клиенты

    def работать(self):
        return f"Продавец работает с {len(self.клиенты)} клиентами."

class Отдел:
    """Класс отдела продаж"""
    def __init__(self, название: str):
        self.название = название
        self.сотрудники = []

    def добавить_сотрудника(self, сотрудник: Сотрудник):
        self.сотрудники.append(сотрудник)

    def показать_сотрудников(self):
        return [сотр.получить_информацию() for сотр in self.сотрудники]

# --- Пример работы кода ---
клиент1 = Клиент("Иван Петров", "ivan@example.com")
клиент2 = Клиент("Мария Смирнова", "maria@example.com")

продавец = Продавец("Олег Сидоров", 50000, [клиент1, клиент2])
менеджер = Менеджер("Анна Иванова", 70000, "Продажи")

отдел_продаж = Отдел("Продажи")
отдел_продаж.добавить_сотрудника(продавец)
отдел_продаж.добавить_сотрудника(менеджер)

# Вывод информации
for сотрудник in отдел_продаж.показать_сотрудников():
    print(сотрудник)

print(продавец.работать())
print(менеджер.работать())

